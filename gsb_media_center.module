<?php

/**
 * Implements hook_views_api().
 */
function gsb_media_center_views_api($module, $api) {
  if ($module == "views" && $api == "views_default") {
    return array(
      'version' => '3.0',
      'path' => drupal_get_path('module', 'gsb_media_center') .'/includes',
    );
  }
}

/**
 * Implements hook_forms().
 */
function gsb_media_center_forms() {
  $forms['gsb_media_center_add_files_and_docs_upload'] = array(
    'callback' => 'file_entity_add_upload',
  );

  $forms['gsb_media_center_add_image_upload'] = array(
    'callback' => 'file_entity_add_upload',
  );

  $forms['gsb_media_center_add_video_upload'] = array(
    'callback' => 'media_internet_add',
  );

  return $forms;
}

/**
 * Implements hook_form_FORM_ID_alter
 */
function gsb_media_center_form_gsb_media_center_add_video_upload_alter(&$form, &$form_state) {
  if ($form_state['submitted'] && $form_state['triggering_element']['#id'] == 'edit-previous') {
    drupal_add_js(drupal_get_path('module', 'gsb_media_center') . '/js/gsb_media_center_video_upload.js', 
            array('weight' => 5 ));
  }
}

/**
 * Implements hook_form_FORM_ID_alter
 */
function gsb_media_center_form_gsb_media_center_add_files_and_docs_upload_alter(&$form, &$form_state) {
  if ($form_state['submitted'] && $form_state['triggering_element']['#id'] == 'edit-previous') {
    drupal_add_js(drupal_get_path('module', 'gsb_media_center') . '/js/gsb_media_center_file_upload.js', 
            array('weight' => 5 ));
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function gsb_media_center_form_views_exposed_form_alter(&$form, &$form_state) {
  // Make sure we are only messing with exposed forms with sections.
  if (isset($form['field_sections_tid'])) {
    $new_default = array();
    global $user;
    // If we don't have workbench_access data load it.
    if (empty($user->workbench_access)) {
      workbench_access_user_load_data($user);
    }

    // Loop through the available options.
    foreach($form['field_sections_tid']['#options'] as $key => $value) {
      // If the user has access add it to our input key.
      // Otherwise remove it from the available options.
      if (isset($user->workbench_access[$key])) {
        $new_default[$key] = $key;
      }
      else {
        unset($form['field_sections_tid']['#options'][$key]);
      }
    }

    // We only need to set our input value if it's our first time through.
    if (!isset($form_state['input']['sections_processed'])) {
      // Keeps track if we've already processed the section.
      $form['sections_processed'] = array(
        '#type' => 'hidden',
        '#value' => TRUE,
      );

      // Views requires us to not only set the form, but the form_state.
      $form['field_sections_tid']['#default_value'] = $new_default;
      $form_state['input']['field_sections_tid'] = $new_default;
    }
  }
}

/**
 * Implements hook_file_default_types_alter().
 */
function gsb_media_center_file_default_types_alter(&$types) {
  $types['document']->mimetypes[] = 'application/zip';
}
